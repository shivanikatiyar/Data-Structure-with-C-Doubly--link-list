                             
					Assignment-9(DS)Doubly Link List
			  *******************************************
		
Question.1: [Create a DLL of 6 nodes insert inputs in your code]
		
#include<stdio.h>
#include<conio.h>
struct node
{
    int data;
    struct node *next;
    struct node *prev;
}*tail,*head;
struct node *create()
{
    struct node *newnode;
    newnode=(struct node*)malloc(sizeof(struct node));
    return(newnode);
}
void arraylink()
{ int i,x=5;

    struct node *temp;
    for(i=0;i<6;i++)
    {
    temp=create();
    temp->data=x;
    temp->next=0;
    temp->prev=0;
    if(head==0)
    {
        head=tail=temp;
    }
    else
    {
        tail->next=temp;
        temp->prev=head;
        tail=temp;
    }
     x=x+4;
    }

}
void display()
{ struct node *temp;
temp=head;
    printf("\nDisplay List :");
    while(temp!=0)
    {
        printf("\t%d",temp->data);
        temp=temp->next;
    }
}
void main()
{
    arraylink();
    display();
}

Question.2: [Create a DLL take input from users]

#include<stdio.h>
#include<conio.h>
struct node
{
    int data;
    struct node *next;
    struct node *prev;
}*head,*tail;
int count=0;
void create()
{ struct node *newnode;
head=0;
int choice=1;
while(choice)
{
newnode=(struct node*)malloc(sizeof(struct node));
printf("Enter the Data :");
scanf("%d",&newnode->data);
newnode->next=0;
newnode->prev=0;
if(head==0)
{
    head=tail=newnode;
}
else
{
    tail->next=newnode;
    newnode->prev=tail;
    tail=newnode;
}
printf("DO you want to continue(0,1):");
scanf("%d",&choice);
}
count++;
}
void display()

{
    printf("\n Display Link List is:");
    struct node *temp;
    temp=head;
if(head==0)
{
    printf("List is empty");

}
else
{
    while(temp!=0)
    {
    printf("\t %d",temp->data);
    temp=temp->next;
    }

}
}
int main()
{
    create();
    display();
    return 0;
}
INPUT-
Enter the Data :4
DO you want to continue(0,1):1
Enter the Data :7
DO you want to continue(0,1):1
Enter the Data :9
DO you want to continue(0,1):1
Enter the Data :67
DO you want to continue(0,1):0
OUTPUT-
Display Link List is:   4       7       9       67

Question.3:[Insert this array in DLL]
#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
    struct node *prev;
}*tail,*head;
struct node *create()
{
    struct node *newnode;
    newnode=(struct node*)malloc(sizeof(struct node));
    return(newnode);
}
void arraylink(int arr[],int n)
{ int i;

    struct node *temp;
    for(i=0;i<n;i++)
    {
    temp=create();
    temp->data=arr[i];
    temp->next=0;
    temp->prev=0;
    if(head==0)
    {
        head=tail=temp;
    }
    else
    {
        tail->next=temp;
        temp->prev=head;
        tail=temp;
    }
    }

}
void display()
{ struct node *temp;
temp=head;
    printf("Display Link list :");
    while(temp!=0)
    {
        printf("%d ",temp->data);
        temp=temp->next;
    }
}
void main()
{
    int arr[]={9,0,4,5,6,7,0,0,6,4};
    int n;
    n=sizeof(arr)/sizeof(arr[0]);
    arraylink(arr,n);
    display();
}
OUTPUT-
Display Link list :9 0 4 5 6 7 0 0 6 4

Question.4:[Create a DLL list by user (delete random node as by user(as input perform opeartion at head tail also),Insert)]


#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
    struct node *prev;
}*head,*tail;
int count=0;
void create()
{ struct node *newnode;
head=0;
int choice=1;
while(choice)
{
newnode=(struct node*)malloc(sizeof(struct node));
printf("\nEnter data:");
scanf("%d",&newnode->data);
newnode->next=0;
newnode->prev=0;
if(head==0)
{
    head=tail=newnode;
}
else
{
    tail->next=newnode;
    newnode->prev=tail;
    tail=newnode;
}
printf("Do you want continue(0,1):");
scanf("%d",&choice);
}
count++;
}
void display()

{
    printf("\n Display Link List is :");
    struct node *temp;
    temp=head;
if(head==0)
{
    printf("list is empty");

}
else
{
    while(temp!=0)
    {
    printf(" %d",temp->data);
    temp=temp->next;
    }

}
}
void insertatbeg()
{
  struct node *newnode;
  newnode=(struct node*)malloc(sizeof(struct node));
printf("\nEnter data :");
scanf("%d",&newnode->data);
newnode->next=0;
newnode->prev=0;
if(head==0)
{
    head=tail=newnode;
}
else
{
head->prev=newnode;
newnode->next=head;
head=newnode;
}
count++;

}
void insert()
{ int pos,i=1;
struct node *newnode;
printf("\nEnter the postion :");
scanf("%d",&pos);

if(pos<1||pos>count)
{
    printf("Invalid Position");
}
else if(pos==1)
{
    insertatbeg();
}
else
{ struct node *temp;
temp=head;
newnode=(struct node*)malloc(sizeof(struct node));
printf("\nEnter the data :");
scanf("%d",&newnode->data);
newnode->next=0;
newnode->prev=0;

while(i<pos-1)
{
    temp=temp->next;
    i++;
}
temp->next->prev=newnode;
newnode->next=temp->next;
newnode->prev=temp;
temp->next=newnode;
}
count++;

}


void deleteatbeg()
{
    struct node *temp;
    temp=head;
  if(head==0)
  {
      printf("List is empty");
  }
  else if(head->next==head)
  {
      head=0;
      free(temp);
  }
  else
   {
       head=head->next;
       head->prev=0;
       free(temp);
   }
   count--;
  }
void deleted()
  {
      struct node *temp;
      temp=head;
      int pos,i=1;
      printf("\nEnter Postion :");
      scanf("%d",&pos);
      if(pos<1||pos>count)
      {
          printf("Invalid Postion");
      }
      else if(pos==1)
      {
          deleteatbeg();
      }
      else
      {
          while(i<pos)
          {
              temp=temp->next;
              i++;
          }
          temp->prev->next=temp->next;
          temp->next->prev=temp->prev;
          free(temp);
      }
      count--;
  }
int main()
{ int choice;
 while(1)
{
printf("\n1.Create \n2.Display\n3.Insert node at postion\n4.Delete node at postion\n5.Exit\n");
printf("Enter your choice\n");
scanf("%d",&choice);
switch(choice)
{
case 1:
    create();
    break;
case 2:
    display();
    break;
case 3:
    insert();
    break;
case 4:
    deleted();
    break;
case 5:
    exit(1);
    break;
default :
    printf("Invalid choice");

   }
}
   return 0;
}

Question.5:[Create a method which returns number of nodes in DLL]

#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
    struct node *prev;
}*head,*tail;
int count=0;
void create()
{ struct node *newnode;
head=0;
int choice=1;
while(choice)
{
newnode=(struct node*)malloc(sizeof(struct node));
printf("enter data :");
scanf("%d",&newnode->data);
newnode->next=0;
newnode->prev=0;
if(head==0)
{
    head=tail=newnode;
}
else
{
    tail->next=newnode;
    newnode->prev=tail;
    tail=newnode;
}
printf("do you want continue(0,1)  :");
scanf("%d",&choice);
}
}
int getlenth()
{
    int i=0;
    struct node *temp;
    temp=head;
    while(temp!=0)
    {
        i++;
       temp=temp->next;

    }
    return(i);
}
void main()
{
    create();
printf("lenth :%d",getlenth());
}
INPUT-
enter data :3
do you want continue(0,1)  :1
enter data :4
do you want continue(0,1)  :1
enter data :23
do you want continue(0,1)  :0
OUTPUT-
lenth :3